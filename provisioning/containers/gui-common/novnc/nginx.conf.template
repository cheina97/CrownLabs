# Templated nginx configuration, derived from the default nginx config

worker_processes  auto;

# Save pid into /tmp to fix errors when running as non-root
pid        /tmp/nginx.pid;

# Workers configuration
events {
    worker_connections  1024;
}

# Main interface
http {
    # Default file server configuration
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    # See https://thoughts.t37.net/nginx-optimization-understanding-sendfile-tcp-nodelay-and-tcp-nopush-c55cdd276765 for better understanding the following options:
    # - Enable sendfile() syscall to avoid use of userspace buffers when possible
    sendfile        on;
    # - Disable nopush & enable nodelay: this should reduce latency by making smaller packets, to improve user experience with novnc
    tcp_nopush     off;
    tcp_nodelay     on;

    # Disable compression.
    # Should be tested if there is any appreciable difference on a real scenario
    #gzip  on;

    # Set websockify destination for the reverse-proxy
    upstream websockify {
        server ${WEBSOCKIFY_HOST}:${WEBSOCKIFY_PORT};
    }

    # Actual server configuration
    server {
      listen       ${HTTP_PORT}; # Server port

      # Reverse proxy configuration to forward 
      # requests on /websockify to the actual websockify
      location /websockify {
          proxy_pass http://websockify;
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "Upgrade";
          proxy_set_header Host $host;
      }
      
      # Serve noVNC client files on server root
      location / {
          # Disable caching to prevent issues on novnc updates
          add_header Cache-Control no-cache;
          root   /usr/share/nginx/html;
          # Set default document served on root
          index  vnc.html;
          gzip_static on;
          sub_filter '<head>' '<head><base href="https://$host/instance/">';
      }

      # Define healthz endpoint for Prometheus
      location /healthz {
        access_log off;
        return 200 "healthy\n";
      }

      # Provide error pages locations
      error_page   500 502 503 504  /50x.html;
      location = /50x.html {
          root   /usr/share/nginx/html;
      }
  }
}
